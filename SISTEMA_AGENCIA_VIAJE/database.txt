/* =====================================================
   ERP TURISMO - Esquema base
   ===================================================== */

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";

/* -----------------------------------------------------
   0) BASE DE DATOS
   ----------------------------------------------------- */
CREATE DATABASE IF NOT EXISTS erp_turismo
  CHARACTER SET utf8mb4
  COLLATE utf8mb4_general_ci;
USE erp_turismo;

/* -----------------------------------------------------
   1) ÁREAS / ROLES / PERMISOS / USUARIOS
   ----------------------------------------------------- */

CREATE TABLE areas (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(60) NOT NULL UNIQUE,       -- ventas, contabilidad, operaciones, logistica, marketing, gerencia, postventa
  descripcion VARCHAR(255)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE roles (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(60) NOT NULL UNIQUE,       -- Admin, Supervisor, Agente, Operador, Contador, Marketing, Gerencia
  descripcion VARCHAR(255),
  area_id INT NULL,
  FOREIGN KEY (area_id) REFERENCES areas(id)
    ON UPDATE CASCADE ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE permisos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(100) NOT NULL UNIQUE,      -- p.ej. ventas.crear, ventas.editar, contabilidad.ver, etc.
  descripcion TEXT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE rol_permisos (
  rol_id INT NOT NULL,
  permiso_id INT NOT NULL,
  PRIMARY KEY (rol_id, permiso_id),
  FOREIGN KEY (rol_id) REFERENCES roles(id)
    ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (permiso_id) REFERENCES permisos(id)
    ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE usuarios (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(100) NOT NULL,
  apellido VARCHAR(100) NOT NULL,
  correo VARCHAR(255) NOT NULL UNIQUE,
  contrasena_hash VARCHAR(255) NOT NULL,
  rol_id INT NOT NULL,
  area_id INT NULL,
  activo TINYINT(1) DEFAULT 1,
  secreto_doble_factor VARCHAR(255) NULL,
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  actualizado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (rol_id) REFERENCES roles(id)
    ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY (area_id) REFERENCES areas(id)
    ON UPDATE CASCADE ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

/* -----------------------------------------------------
   2) CLIENTES / AGENCIAS / PROVEEDORES
   ----------------------------------------------------- */

CREATE TABLE clientes (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(100) NOT NULL,
  apellido VARCHAR(100) NOT NULL,
  correo VARCHAR(255) UNIQUE,
  telefono VARCHAR(50),
  pais VARCHAR(60),
  fecha_nacimiento DATE,
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  actualizado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE agencias (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(150) NOT NULL,
  ruc VARCHAR(20),
  contacto VARCHAR(100),
  telefono VARCHAR(50),
  correo VARCHAR(100),
  direccion VARCHAR(255),
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE proveedores (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(255) NOT NULL,
  ruc VARCHAR(20),
  contacto VARCHAR(100),
  telefono VARCHAR(50),
  correo VARCHAR(100),
  direccion VARCHAR(255),
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

/* -----------------------------------------------------
   3) VENTAS / EXPEDIENTES (archivo de venta)
   ----------------------------------------------------- */

CREATE TABLE expedientes (
  id INT AUTO_INCREMENT PRIMARY KEY,              -- id_file
  codigo VARCHAR(30) UNIQUE,                      -- opcional: código legible del expediente
  responsable_id INT NOT NULL,                    -- usuario que vende
  cliente_id INT NOT NULL,
  agencia_id INT NULL,
  fecha_venta DATE NOT NULL,
  programa VARCHAR(255) NOT NULL,                 -- programa/tour vendido
  tour VARCHAR(255) NOT NULL,                      -- nombre del tour principal
  duracion_dias INT NOT NULL,                      -- duración
  personas SMALLINT NOT NULL DEFAULT 1,            -- número de pax
  fecha_tour_inicio DATE NOT NULL,
  fecha_tour_fin DATE NOT NULL,
  moneda ENUM('PEN','USD','EUR','OTRA') NOT NULL DEFAULT 'PEN',
  monto_persona DECIMAL(12,2) NOT NULL,
  monto_total DECIMAL(12,2) NOT NULL,
  monto_depositado DECIMAL(12,2) NOT NULL DEFAULT 0,
  medio_pago VARCHAR(50),                          -- tarjeta, transferencia, etc.
  origen_cliente VARCHAR(100),                     -- web, referidos, redes, etc.
  notas TEXT,
  estado ENUM('nuevo','confirmado','en_proceso','finalizado','anulado') DEFAULT 'nuevo',
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  actualizado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (responsable_id) REFERENCES usuarios(id)
    ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY (cliente_id) REFERENCES clientes(id)
    ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY (agencia_id) REFERENCES agencias(id)
    ON UPDATE CASCADE ON DELETE SET NULL,
  INDEX idx_expediente_codigo (codigo),
  INDEX idx_expediente_fechas (fecha_venta, fecha_tour_inicio, fecha_tour_fin)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE adjuntos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  modulo ENUM('expediente','operacion','contabilidad','marketing','postventa','inventario') NOT NULL,
  registro_id INT NOT NULL,                        -- id al que se asocia dentro del módulo
  nombre_archivo VARCHAR(255) NOT NULL,
  ruta VARCHAR(255) NOT NULL,                      -- path/URL relativo
  mime VARCHAR(120),
  subido_por INT NULL,
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  INDEX idx_adj_mod (modulo, registro_id),
  FOREIGN KEY (subido_por) REFERENCES usuarios(id)
    ON UPDATE CASCADE ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE pagos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  expediente_id INT NOT NULL,
  fecha DATE NOT NULL,
  monto DECIMAL(12,2) NOT NULL,
  moneda ENUM('PEN','USD','EUR','OTRA') NOT NULL DEFAULT 'PEN',
  metodo VARCHAR(50) NOT NULL,                     -- tarjeta, transferencia, efectivo, etc.
  comprobante_url VARCHAR(255),
  notas VARCHAR(255),
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (expediente_id) REFERENCES expedientes(id)
    ON UPDATE CASCADE ON DELETE CASCADE,
  INDEX idx_pago_fecha (fecha)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

/* -----------------------------------------------------
   4) OPERACIONES / LOGÍSTICA
   ----------------------------------------------------- */

CREATE TABLE servicios_operaciones (
  id INT AUTO_INCREMENT PRIMARY KEY,
  expediente_id INT NOT NULL,                      -- vincula con la venta
  tipo ENUM('tren','hotel','entrada','transporte','guia','tour','otro') NOT NULL,
  proveedor_id INT NOT NULL,
  descripcion VARCHAR(255),
  costo_acordado DECIMAL(12,2) NOT NULL,
  monto_depositado DECIMAL(12,2) NOT NULL DEFAULT 0,
  monto_pagado DECIMAL(12,2) NOT NULL DEFAULT 0,
  saldo DECIMAL(12,2) GENERATED ALWAYS AS (costo_acordado - monto_pagado) STORED,
  reservado TINYINT(1) DEFAULT 0,                  -- 0=no, 1=si
  reservado_en DATETIME NULL,
  confirmacion_codigo VARCHAR(100),
  voucher_url VARCHAR(255),
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (expediente_id) REFERENCES expedientes(id)
    ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (proveedor_id) REFERENCES proveedores(id)
    ON UPDATE CASCADE ON DELETE RESTRICT,
  INDEX idx_serv_exp (expediente_id, tipo),
  INDEX idx_serv_prov (proveedor_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Programación diaria / panel de tours
CREATE TABLE programacion_operaciones (
  id INT AUTO_INCREMENT PRIMARY KEY,
  fecha DATE NOT NULL,
  expediente_id INT NOT NULL,
  servicio_operacion_id INT NULL,                  -- opcional: enlazar a un servicio puntual
  titulo VARCHAR(255) NOT NULL,
  descripcion TEXT,
  estado ENUM('pendiente','confirmado','realizado','cancelado') DEFAULT 'pendiente',
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (expediente_id) REFERENCES expedientes(id)
    ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (servicio_operacion_id) REFERENCES servicios_operaciones(id)
    ON UPDATE CASCADE ON DELETE SET NULL,
  INDEX idx_prog_fecha (fecha)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Inventario y control de bienes
CREATE TABLE inventario_bienes (
  id INT AUTO_INCREMENT PRIMARY KEY,
  codigo VARCHAR(50) UNIQUE,
  nombre VARCHAR(150) NOT NULL,
  categoria VARCHAR(100),
  descripcion TEXT,
  unidad VARCHAR(20) DEFAULT 'unidad',
  cantidad_total INT NOT NULL DEFAULT 0,
  ubicacion VARCHAR(120),
  estado ENUM('activo','inactivo') DEFAULT 'activo',
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE inventario_movimientos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  bien_id INT NOT NULL,
  fecha DATETIME NOT NULL,
  tipo ENUM('entrada','salida','ajuste') NOT NULL,
  cantidad INT NOT NULL,
  motivo VARCHAR(255),
  referencia VARCHAR(120),
  expediente_id INT NULL,
  creado_por INT NULL,
  FOREIGN KEY (bien_id) REFERENCES inventario_bienes(id)
    ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY (expediente_id) REFERENCES expedientes(id)
    ON UPDATE CASCADE ON DELETE SET NULL,
  FOREIGN KEY (creado_por) REFERENCES usuarios(id)
    ON UPDATE CASCADE ON DELETE SET NULL,
  INDEX idx_inv_bien_fecha (bien_id, fecha)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

/* -----------------------------------------------------
   5) CONTABILIDAD (ingresos/egresos, caja chica)
   ----------------------------------------------------- */

CREATE TABLE contabilidad_categorias (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(120) NOT NULL,
  tipo ENUM('ingreso','egreso') NOT NULL,   -- reporte por tipo
  UNIQUE KEY uniq_cat (nombre, tipo)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE contabilidad_movimientos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  tipo ENUM('ingreso','egreso') NOT NULL,
  categoria_id INT NULL,
  fecha DATE NOT NULL,
  monto DECIMAL(12,2) NOT NULL,
  moneda ENUM('PEN','USD','EUR','OTRA') NOT NULL DEFAULT 'PEN',
  descripcion VARCHAR(255),
  metodo_pago VARCHAR(50),
  estado ENUM('pendiente','pagado') DEFAULT 'pagado',
  expediente_id INT NULL,
  proveedor_id INT NULL,
  creado_por INT NULL,
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (categoria_id) REFERENCES contabilidad_categorias(id)
    ON UPDATE CASCADE ON DELETE SET NULL,
  FOREIGN KEY (expediente_id) REFERENCES expedientes(id)
    ON UPDATE CASCADE ON DELETE SET NULL,
  FOREIGN KEY (proveedor_id) REFERENCES proveedores(id)
    ON UPDATE CASCADE ON DELETE SET NULL,
  FOREIGN KEY (creado_por) REFERENCES usuarios(id)
    ON UPDATE CASCADE ON DELETE SET NULL,
  INDEX idx_conta_fecha (fecha),
  INDEX idx_conta_tipo (tipo)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Caja chica
CREATE TABLE caja_chica (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(80) NOT NULL,
  responsable_id INT NULL,
  saldo_inicial DECIMAL(12,2) NOT NULL DEFAULT 0,
  fecha_apertura DATETIME NOT NULL,
  fecha_cierre DATETIME NULL,
  estado ENUM('abierta','cerrada') DEFAULT 'abierta',
  FOREIGN KEY (responsable_id) REFERENCES usuarios(id)
    ON UPDATE CASCADE ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE caja_chica_movimientos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  caja_id INT NOT NULL,
  fecha DATETIME NOT NULL,
  tipo ENUM('ingreso','egreso') NOT NULL,
  concepto VARCHAR(255) NOT NULL,
  monto DECIMAL(12,2) NOT NULL,
  moneda ENUM('PEN','USD','EUR','OTRA') NOT NULL DEFAULT 'PEN',
  expediente_id INT NULL,
  proveedor_id INT NULL,
  adjunto_id INT NULL,
  creado_por INT NULL,
  FOREIGN KEY (caja_id) REFERENCES caja_chica(id)
    ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (expediente_id) REFERENCES expedientes(id)
    ON UPDATE CASCADE ON DELETE SET NULL,
  FOREIGN KEY (proveedor_id) REFERENCES proveedores(id)
    ON UPDATE CASCADE ON DELETE SET NULL,
  FOREIGN KEY (adjunto_id) REFERENCES adjuntos(id)
    ON UPDATE CASCADE ON DELETE SET NULL,
  FOREIGN KEY (creado_por) REFERENCES usuarios(id)
    ON UPDATE CASCADE ON DELETE SET NULL,
  INDEX idx_caja_fecha (fecha)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

/* -----------------------------------------------------
   6) MARKETING / CALENDARIO / POSTVENTA
   ----------------------------------------------------- */

-- Calendario general por módulo (independiente del de operaciones si quieres)
CREATE TABLE calendario (
  id INT AUTO_INCREMENT PRIMARY KEY,
  modulo ENUM('ventas','operaciones','marketing','gerencia','contabilidad','postventa') NOT NULL,
  titulo VARCHAR(255) NOT NULL,
  descripcion TEXT,
  inicio DATETIME NOT NULL,
  fin DATETIME NOT NULL,
  expediente_id INT NULL,
  usuario_id INT NULL,
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (expediente_id) REFERENCES expedientes(id)
    ON UPDATE CASCADE ON DELETE SET NULL,
  FOREIGN KEY (usuario_id) REFERENCES usuarios(id)
    ON UPDATE CASCADE ON DELETE SET NULL,
  INDEX idx_calendario_mod_inicio (modulo, inicio)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Tareas de marketing
CREATE TABLE marketing_tareas (
  id INT AUTO_INCREMENT PRIMARY KEY,
  usuario_id INT NOT NULL,
  titulo VARCHAR(255) NOT NULL,
  descripcion TEXT,
  fecha DATE NOT NULL,
  estado ENUM('pendiente','en_progreso','completada') DEFAULT 'pendiente',
  tipo ENUM('post','video','email','otro') NOT NULL DEFAULT 'otro',
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (usuario_id) REFERENCES usuarios(id)
    ON UPDATE CASCADE ON DELETE RESTRICT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Plantillas y campañas (para postventa/marketing)
CREATE TABLE plantillas (
  id INT AUTO_INCREMENT PRIMARY KEY,
  canal ENUM('whatsapp','email','sms') NOT NULL,
  nombre VARCHAR(255) NOT NULL,
  contenido TEXT NOT NULL,
  variables_json JSON NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE campanas (
  id INT AUTO_INCREMENT PRIMARY KEY,
  canal ENUM('whatsapp','email','sms') NOT NULL,
  nombre VARCHAR(255) NOT NULL,
  segmento_json JSON NOT NULL,          -- filtros/destinatarios
  plantilla_id INT NOT NULL,
  estado ENUM('pendiente','enviado','fallido','programado') DEFAULT 'pendiente',
  programada_para DATETIME NULL,
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (plantilla_id) REFERENCES plantillas(id)
    ON UPDATE CASCADE ON DELETE RESTRICT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE campana_destinatarios (
  id INT AUTO_INCREMENT PRIMARY KEY,
  campana_id INT NOT NULL,
  cliente_id INT NOT NULL,
  expediente_id INT NULL,
  estado ENUM('pendiente','enviado','fallido','entregado','leido') DEFAULT 'pendiente',
  enviado_en DATETIME NULL,
  error_msg VARCHAR(255),
  FOREIGN KEY (campana_id) REFERENCES campanas(id)
    ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (cliente_id) REFERENCES clientes(id)
    ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY (expediente_id) REFERENCES expedientes(id)
    ON UPDATE CASCADE ON DELETE SET NULL,
  INDEX idx_cd_estado (estado)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Registro de interacciones postventa
CREATE TABLE postventa_interacciones (
  id INT AUTO_INCREMENT PRIMARY KEY,
  expediente_id INT NULL,
  cliente_id INT NOT NULL,
  canal ENUM('whatsapp','email','sms','llamada') NOT NULL,
  fecha DATETIME NOT NULL,
  asunto VARCHAR(255),
  mensaje TEXT,
  responsable_id INT NULL,
  resultado ENUM('enviado','respondido','fallido','pendiente') DEFAULT 'pendiente',
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (expediente_id) REFERENCES expedientes(id)
    ON UPDATE CASCADE ON DELETE SET NULL,
  FOREIGN KEY (cliente_id) REFERENCES clientes(id)
    ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY (responsable_id) REFERENCES usuarios(id)
    ON UPDATE CASCADE ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

/* -----------------------------------------------------
   7) AUDITORÍA
   ----------------------------------------------------- */

CREATE TABLE auditoria (
  id INT AUTO_INCREMENT PRIMARY KEY,
  usuario_id INT NOT NULL,
  tabla VARCHAR(100),
  registro_id INT NOT NULL,
  accion ENUM('crear','editar','eliminar','login','logout') NOT NULL,
  valores_antiguos TEXT,
  valores_nuevos TEXT,
  ip VARCHAR(50),
  user_agent VARCHAR(255),
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (usuario_id) REFERENCES usuarios(id)
    ON UPDATE CASCADE ON DELETE RESTRICT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

/* -----------------------------------------------------
   8) SEEDS BÁSICOS (opcionales)
   ----------------------------------------------------- */
INSERT IGNORE INTO areas (nombre) VALUES
('ventas'),('contabilidad'),('operaciones'),('logistica'),('marketing'),('gerencia'),('postventa');

INSERT IGNORE INTO roles (nombre, descripcion, area_id) VALUES
('Admin','Acceso total', (SELECT id FROM areas WHERE nombre='gerencia')),
('Gerencia','Panel integral', (SELECT id FROM areas WHERE nombre='gerencia')),
('Ventas','Acceso a ventas', (SELECT id FROM areas WHERE nombre='ventas')),
('Operaciones','Acceso a operaciones', (SELECT id FROM areas WHERE nombre='operaciones')),
('Contabilidad','Acceso a contabilidad', (SELECT id FROM areas WHERE nombre='contabilidad')),
('Marketing','Acceso a marketing', (SELECT id FROM areas WHERE nombre='marketing')),
('Postventa','Acceso a postventa', (SELECT id FROM areas WHERE nombre='postventa'));
